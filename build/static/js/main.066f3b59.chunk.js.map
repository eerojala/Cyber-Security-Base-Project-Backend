{"version":3,"sources":["util/serviceHelper.js","services/userService.js","reducers/userReducer.js","services/messageService.js","reducers/messageReducer.js","components/Redirector.js","services/loginService.js","reducers/loginReducer.js","reducers/redirectReducer.js","components/LoginForm.js","components/MessageEditForm.js","components/MessageCreationForm.js","components/MessagesView.js","components/MessageView.js","components/NavigationBar.js","components/RegistrationForm.js","App.js","store.js","index.js"],"names":["config","getConfig","a","async","axios","get","response","data","content","post","userReducer","state","action","type","concat","id","put","messageReducer","messages","filter","message","updatedMessage","Redirector","this","props","redirect","undefined","to","React","Component","connect","credentials","loginReducer","user","path","dispatch","setTimeout","redirectReducer","LoginForm","sendLoginCredentials","event","preventDefault","username","target","value","password","login","alert","Form","onSubmit","Field","label","name","control","Button","mapDispatchToProps","loginService","window","localStorage","setItem","JSON","stringify","newToken","token","headers","console","log","MessageEditForm","editMessage","userInput","title","messageEdit","defaultValue","messageService","messageId","find","MessageCreationForm","createMessage","formContent","messageCreation","newMessage","MessagesView","form","loggedInUser","Table","Header","Row","HeaderCell","Body","map","key","Cell","MessageView","editLink","_id","dangerouslySetInnerHTML","NavigationBar","userLoggedIn","loginMenuItem","Menu","Item","link","registerMenuItem","logoutMenuItem","onClick","logout","inverted","RegistrationForm","createUser","userCreation","userService","newUser","App","userInit","messageInit","Container","exact","render","match","params","users","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"wUAAIA,EAAS,KAMAC,EAAY,WACrB,OAAOD,GCUI,EAZA,0BAAAE,EAAAC,OAAA,kEAAAD,EAAA,MACYE,IAAMC,IAHjB,eAED,cACLC,EADK,yBAGJA,EAASC,MAHL,sCAYA,EANA,SAAOC,GAAP,eAAAN,EAAAC,OAAA,kEAAAD,EAAA,MACYE,IAAMK,KATjB,aAS+BD,EAASP,MADzC,cACLK,EADK,yBAGJA,EAASC,MAHL,sCC8BAG,EAvCK,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACxC,OAAQA,EAAOC,MACX,IAAK,aACD,OAAOD,EAAOL,KAClB,IAAK,WACD,OAAOI,EAAMG,OAAOF,EAAOL,MAC/B,QACI,OAAOI,ICoBJ,EAxBA,0BAAAT,EAAAC,OAAA,kEAAAD,EAAA,MACYE,IAAMC,IAHjB,kBAED,cACLC,EADK,yBAGJA,EAASC,MAHL,sCAwBA,EAZA,SAAOC,GAAP,eAAAN,EAAAC,OAAA,kEAAAD,EAAA,MACYE,IAAMK,KAfjB,gBAe+BD,EAASP,MADzC,cACLK,EADK,yBAGJA,EAASC,MAHL,sCAYA,EANA,SAAOQ,EAAIP,GAAX,eAAAN,EAAAC,OAAA,kEAAAD,EAAA,MACYE,IAAMY,IAAN,UArBX,gBAqBW,YAAwBD,GAAMP,EAASP,MADnD,cACLK,EADK,yBAGJA,EAASC,MAHL,sCC2CAU,EAhEQ,WAAyB,IAAxBN,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAOD,EAAOL,KAClB,IAAK,cACD,OAAOI,EAAMG,OAAOF,EAAOL,MAC/B,IAAK,eACD,IAAMW,EAAWP,EAAMQ,QAAO,SAAAC,GAAO,OAAIA,EAAQL,KAAOH,EAAOL,KAAKQ,MACpE,OAAOG,EAASJ,OAAOF,EAAOL,KAAKc,gBACvC,QACI,OAAOV,I,kBCRbW,E,iLAEE,OAA4B,OAAxBC,KAAKC,MAAMC,eAA6CC,IAAxBH,KAAKC,MAAMC,SACpC,KAGJ,kBAAC,IAAD,CAAUE,GAAIJ,KAAKC,MAAMC,e,GANfG,IAAMC,WAchBC,eAJS,SAACnB,GACrB,MAAO,CAAEc,SAAUd,EAAMc,YAGdK,CAA2BR,GCR3B,EAND,SAAOS,GAAP,eAAA7B,EAAAC,OAAA,kEAAAD,EAAA,MACaE,IAAMK,KAHjB,aAG+BsB,IADjC,cACJzB,EADI,yBAGHA,EAASC,MAHN,sCCwCCyB,EAzCM,WAA2B,IAA1BrB,EAAyB,uDAAjB,KAAMC,EAAW,uCAC3C,OAAQA,EAAOC,MACX,IAAK,QACD,OAAOD,EAAOqB,KAClB,IAAK,SACD,OAAO,KACX,QACI,OAAOtB,ICCNc,EAAW,SAACS,GACrB,OAAO,SAAOC,GAAP,SAAAjC,EAAAC,OAAA,gDACHgC,EAAS,CACLtB,KAAM,WACNN,KAAM2B,IAGVE,YAAW,WACPD,EAAS,CACLtB,KAAM,oBACP,QATJ,uCAcIwB,EA1BS,WAA2B,IAA1B1B,EAAyB,uDAAjB,KAAMC,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IAAK,WACD,OAAOD,EAAOL,KAClB,IAAK,mBACD,OAAO,KACX,QACI,OAAOI,ICAb2B,E,2MACFC,qBAAuB,SAAOC,GAAP,eAAAtC,EAAAC,OAAA,uDACnBqC,EAAMC,iBAEAV,EAAc,CAChBW,SAAUF,EAAMG,OAAOD,SAASE,MAChCC,SAAUL,EAAMG,OAAOE,SAASD,OAGpCJ,EAAMG,OAAOD,SAASE,MAAQ,GAC9BJ,EAAMG,OAAOE,SAASD,MAAQ,GATX,WAAA1C,EAAA,MAWA,EAAKsB,MAAMsB,MAAMf,IAXjB,OAaN,OAbM,OAcf,EAAKP,MAAMC,SAAS,KAEpBsB,MAAM,gBAhBS,sC,wEAqBnB,OACI,6BACI,sCACA,kBAACC,EAAA,EAAD,CAAMC,SAAU1B,KAAKgB,sBACjB,kBAACS,EAAA,EAAKE,MAAN,CAAYC,MAAM,WAAWC,KAAK,WAAWC,QAAQ,UACrD,kBAACL,EAAA,EAAKE,MAAN,CAAYC,MAAM,WAAWC,KAAK,WAAWC,QAAQ,QAAQxC,KAAK,aAClE,kBAACyC,EAAA,EAAD,CAAQzC,KAAK,UAAb,UAEJ,kBAAC,EAAD,W,GA9BQe,IAAMC,WAoCxB0B,EAAqB,CAAET,MF7BR,SAACf,GAClB,OAAO,SAAOI,GAAP,eAAAjC,EAAAC,OAAA,2EAAAD,EAAA,MAEoBsD,EAAmBzB,IAFvC,cAEOE,EAFP,OAICwB,OAAOC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAU5B,IPjB7C6B,EOkBJ7B,EAAK8B,MPjBvB/D,EAAS,CAAEgE,QAAS,CAAC,cAAgB,UAAhB,OAA2BF,KOkBxCG,QAAQC,IAAI,2BAEZ/B,EAAS,CACLtB,KAAM,QACNoB,KAAMA,IAVX,kBAaQA,GAbR,yCAeCgC,QAAQC,IAAR,MAfD,kBAgBQ,MAhBR,kCPbc,IAACJ,IOaf,sBE4ByBrC,YAErBK,cAAQ,KAAMyB,EAAdzB,CAAmCQ,GCtC5C6B,E,2MACFC,YAAc,SAAO5B,GAAP,eAAAtC,EAAAC,OAAA,uDACVqC,EAAMC,iBAEA4B,EAAY,CACdC,MAAO9B,EAAMG,OAAO2B,MAAM1B,MAC1BpC,QAASgC,EAAMG,OAAOnC,QAAQoC,OALxB,WAAA1C,EAAA,MAQkB,EAAKsB,MAAM+C,YAAY,EAAK/C,MAAMJ,QAAQL,GAAIsD,IARhE,cAWN,EAAK7C,MAAMC,SAAS,KAEpBsB,MAAM,aAbA,sC,wEAiBJ,IACE3B,EAAYG,KAAKC,MAAjBJ,QAER,OAAgB,OAAZA,QAAgCM,IAAZN,EACb,KAIP,6BACI,iDACA,kBAAC4B,EAAA,EAAD,CAAMC,SAAU1B,KAAK6C,aACjB,kBAACpB,EAAA,EAAKE,MAAN,CAAYC,MAAM,QAAQC,KAAK,QAAQC,QAAQ,QAAQmB,aAAcpD,EAAQkD,QAC7E,kBAACtB,EAAA,EAAKE,MAAN,CAAYC,MAAM,UAAUC,KAAK,UAAUC,QAAQ,QAAQmB,aAAcpD,EAAQZ,UACjF,kBAAC8C,EAAA,EAAD,CAAQzC,KAAK,UAAb,SAEJ,kBAAC,EAAD,W,GAjCce,IAAMC,WAmD9B0B,EAAqB,CAAEgB,YNbF,SAACxD,EAAIP,GAC5B,OAAO,SAAO2B,GAAP,eAAAjC,EAAAC,OAAA,2EAAAD,EAAA,MAE8BuE,EAAsB1D,EAAIP,IAFxD,cAEOa,EAFP,OAICc,EAAS,CACLtB,KAAM,eACNN,KAAO,CACHc,iBACAN,QART,kBAYQM,GAZR,uCAcC4C,QAAQC,IAAR,MAdD,kBAeQ,MAfR,0DMY+BzC,YAE3BK,eAdS,SAACnB,EAAOa,GAAW,IAC/BkD,EAAclD,EAAdkD,UAER,OAAuB,OAAnB/D,EAAMO,SACC,CAAEE,QAAS,MAGf,CACHA,QAAST,EAAMO,SAASyD,MAAK,SAAAvD,GAAO,OAAIA,EAAQL,KAAO2D,QAMvBnB,EAAzBzB,CAA8CqC,G,SCvDvDS,E,2MACFC,cAAgB,SAAOrC,GAAP,eAAAtC,EAAAC,OAAA,uDACZqC,EAAMC,iBAEAqC,EAAc,CAChBR,MAAO9B,EAAMG,OAAO2B,MAAM1B,MAC1BpC,QAASgC,EAAMG,OAAOnC,QAAQoC,OAGlCJ,EAAMG,OAAO2B,MAAM1B,MAAQ,GAC3BJ,EAAMG,OAAOnC,QAAQoC,MAAQ,GATjB,WAAA1C,EAAA,MAWN,EAAKsB,MAAMuD,gBAAgBD,IAXrB,sC,wEAeZ,OACI,6BACI,8CACA,kBAAC9B,EAAA,EAAD,CAAMC,SAAU1B,KAAKsD,eACjB,kBAAC7B,EAAA,EAAKE,MAAN,CAAYC,MAAM,QAAQC,KAAK,QAAQC,QAAQ,UAC/C,kBAACL,EAAA,EAAKE,MAAN,CAAYC,MAAM,UAAUC,KAAK,UAAUC,QAAQ,UACnD,kBAACC,EAAA,EAAD,CAAQzC,KAAK,UAAb,c,GAtBce,IAAMC,WA6BlC0B,EAAqB,CAAEwB,gBPPE,SAACvE,GAC5B,OAAO,SAAO2B,GAAP,eAAAjC,EAAAC,OAAA,2EAAAD,EAAA,MAE0BuE,EAAsBjE,IAFhD,cAEOwE,EAFP,OAIC7C,EAAS,CACLtB,KAAM,cACNN,KAAMyE,IANX,kBASQA,GATR,uCAWCf,QAAQC,IAAR,MAXD,kBAYQ,MAZR,2DOQIpC,cAAQ,KAAMyB,EAAdzB,CAAmC8C,GC9B5CK,E,2MACFC,KAAO,WACH,OAAgC,OAA5B,EAAK1D,MAAM2D,mBAAqDzD,IAA5B,EAAKF,MAAM2D,aACxC,KAEA,kBAAC,EAAD,O,wEAKX,OACI,6BACI,wCACA,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAMC,OAAP,KACI,kBAACD,EAAA,EAAME,IAAP,KACI,kBAACF,EAAA,EAAMG,WAAP,cACA,kBAACH,EAAA,EAAMG,WAAP,iBAGR,kBAACH,EAAA,EAAMI,KAAP,KACKjE,KAAKC,MAAMN,SAASuE,KAAI,SAAArE,GAAO,OAAI,kBAACgE,EAAA,EAAME,IAAP,CAAWI,IAAKtE,EAAQL,IACxD,kBAACqE,EAAA,EAAMO,KAAP,KAAY,kBAAC,IAAD,CAAMhE,GAAE,oBAAeP,EAAQL,KAAOK,EAAQkD,QAC1D,kBAACc,EAAA,EAAMO,KAAP,KAAavE,EAAQa,KAAKS,gBAIrCnB,KAAK2D,Y,GA3BKtD,IAAMC,WAqClBC,eAJS,SAACnB,GACrB,MAAO,CAAEO,SAAUP,EAAMO,SAAUiE,aAAcxE,EAAMwE,gBAG5CrD,CAA0BmD,GCvCnCW,E,iLACS,IACCxE,EAAYG,KAAKC,MAAjBJ,QAER,GAAgB,OAAZA,QAAgCM,IAAZN,EACpB,OAAO,KAGX,IAAMyE,EAAuC,OAA5BtE,KAAKC,MAAM2D,cAAyB5D,KAAKC,MAAM2D,aAAapE,KAAOK,EAAQa,KAAK6D,IACjG,kBAAC,IAAD,CAAMnE,GAAE,oBAAeP,EAAQL,GAAvB,UAAR,QACA,KAEA,OACI,yBAAK2E,IAAKtE,EAAQL,IACd,4BAAKK,EAAQkD,OACb,oCAAUlD,EAAQa,KAAKS,UACvB,yBAAKqD,wBAAyB,CAAC,OAAU3E,EAAQZ,WACjD,2BAAIqF,Q,GAjBMjE,IAAMC,WAoCjBC,eAbS,SAACnB,EAAOa,GAAW,IAC/BkD,EAAclD,EAAdkD,UAER,OAAuB,OAAnB/D,EAAMO,SACC,CAAEE,QAAS,MAGf,CACHA,QAAST,EAAMO,SAASyD,MAAK,SAAAvD,GAAO,OAAIA,EAAQL,KAAO2D,KACvDS,aAAcxE,EAAMwE,gBAIbrD,CAA0B8D,G,SClCnCI,E,2MACFC,aAAe,WACX,OAAmC,OAA5B,EAAKzE,MAAM2D,mBAAqDzD,IAA5B,EAAKF,MAAM2D,c,EAG1De,cAAgB,WACZ,OAAQ,EAAKD,eAIT,KAHA,kBAACE,EAAA,EAAKC,KAAN,CAAWC,MAAI,GACX,kBAAC,IAAD,CAAM1E,GAAG,UAAT,W,EAKZ2E,iBAAmB,WACf,OAAQ,EAAKL,eAIT,KAHA,kBAACE,EAAA,EAAKC,KAAN,KACI,kBAAC,IAAD,CAAMzE,GAAG,aAAT,c,EAKZ4E,eAAiB,WACb,OAAO,EAAKN,eACR,kBAACE,EAAA,EAAKC,KAAN,CAAWI,QAAS,EAAKhF,MAAMiF,QAA/B,UACA,M,wEAIJ,OACI,kBAACN,EAAA,EAAD,CAAMO,UAAQ,GACV,kBAACP,EAAA,EAAKC,KAAN,CAAWC,MAAI,GACX,kBAAC,IAAD,CAAM1E,GAAG,KAAT,YACCJ,KAAK2E,gBACL3E,KAAK+E,mBACL/E,KAAKgF,uB,GAlCE3E,IAAMC,WA6C5B0B,EAAqB,CAAEkD,OPfP,WAClB,OAAO,SAACtE,GACJA,EAAS,CACLtB,KAAM,cOcHiB,gBANS,SAACnB,EAAOa,GAC5B,MAAO,CAAE2D,aAAcxE,EAAMwE,gBAKO5B,EAAzBzB,CAA8CkE,GC9CvDW,G,2MACFC,WAAa,SAAOpE,GAAP,SAAAtC,EAAAC,OAAA,uDACTqC,EAAMC,iBADG,WAAAvC,EAAA,MAGU,EAAKsB,MAAMqF,aAAa,CACvCnE,SAAUF,EAAMG,OAAOD,SAASE,MAChCC,SAAUL,EAAMG,OAAOE,SAASD,SAL3B,eASLG,MAAM,0EACN,EAAKvB,MAAMC,SAAS,WAEpBsB,MAAM,0FAZD,sC,wEAiBT,OACI,6BACI,sDACA,kBAACC,EAAA,EAAD,CAAMC,SAAU1B,KAAKqF,YACjB,kBAAC5D,EAAA,EAAKE,MAAN,CAAYC,MAAM,WAAWC,KAAK,WAAWC,QAAQ,UACrD,kBAACL,EAAA,EAAKE,MAAN,CAAYC,MAAM,WAAWC,KAAK,WAAWC,QAAQ,QAAQxC,KAAK,aAClE,kBAACyC,EAAA,EAAD,CAAQzC,KAAK,UAAb,aAEJ,kBAAC,EAAD,W,GA1Bee,IAAMC,WAgC/B0B,GAAqB,CAAEsD,abfD,SAACrG,GACzB,OAAO,SAAO2B,GAAP,eAAAjC,EAAAC,OAAA,2EAAAD,EAAA,MAEuB4G,EAAmBtG,IAF1C,cAEOuG,EAFP,OAIC5E,EAAS,CACLtB,KAAM,WACNN,KAAMwG,IANX,kBASQA,GATR,gCAWC9C,QAAQC,IAAR,MAXD,0DacgCzC,YAE5BK,eAAQ,KAAMyB,GAAdzB,CAAmC6E,IC1B5CK,G,4LAEEzF,KAAKC,MAAMyF,WACX1F,KAAKC,MAAM0F,gB,+BAIX,OACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,KACI,6BACI,4BACI,kBAAC,IAAD,CAAMxF,GAAG,KAAT,iBAEJ,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAOyF,OAAK,EAAClF,KAAK,IAAImF,OAAQ,kBAAM,kBAAC,EAAD,SACpC,kBAAC,IAAD,CAAOnF,KAAK,SAASmF,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOD,OAAK,EAAClF,KAAK,YAAYmF,OAAQ,kBAAM,kBAAC,EAAD,SAC5C,kBAAC,IAAD,CAAOD,OAAK,EAAClF,KAAK,gBAAgBmF,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,EAAD,CAAa5C,UAAW4C,EAAMC,OAAOxG,QAC9F,kBAAC,IAAD,CAAOqG,OAAK,EAAClF,KAAK,qBAAqBmF,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,EAAD,CAAiB5C,UAAW4C,EAAMC,OAAOxG,QACvG,kBAAC,IAAD,CAAOmB,KAAK,YAAYmF,OAAQ,kBAAM,kBAAC,GAAD,gB,GApB5CzF,IAAMC,WA4BlB0B,GAAqB,CAAE0D,Sd9BL,SAAC1G,GACrB,OAAO,SAAO4B,GAAP,eAAAjC,EAAAC,OAAA,kEAAAD,EAAA,MACiB4G,KADjB,OACGU,EADH,OAGHrF,EAAS,CACLtB,KAAM,aACNN,KAAMiH,IALP,uCc6B4BN,YZ3BZ,SAAC3G,GACxB,OAAO,SAAO4B,GAAP,eAAAjC,EAAAC,OAAA,kEAAAD,EAAA,MACoBuE,KADpB,OACGvD,EADH,OAGHiB,EAAS,CACLtB,KAAM,gBACNN,KAAMW,IALP,wCY4BIY,eAAQ,KAAMyB,GAAdzB,CAAmCkF,I,mBCrC5CS,GAAUC,aAAgB,CAC5BF,MAAO9G,EACPQ,SAAUD,EACVkE,aAAcnD,EACdP,SAAUY,IAQCsF,GALDC,aACVH,GACAI,aAAgBC,OCXpBC,IAASV,OACL,kBAAC,IAAD,CAAUM,MAAOA,IACb,kBAAC,GAAD,OAEJK,SAASC,eAAe,W","file":"static/js/main.066f3b59.chunk.js","sourcesContent":["let config = null\r\n\r\nexport const setConfig = (newToken) => {\r\n    config = { headers: {'Authorization': `bearer ${newToken}`} }\r\n}\r\n\r\nexport const getConfig = () => {\r\n    return config\r\n}","import axios from 'axios'\r\nimport { getConfig } from '../util/serviceHelper'\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n\r\n    return response.data\r\n}\r\n\r\nconst create = async (content) => {\r\n    const response = await axios.post(baseUrl, content, getConfig())\r\n    \r\n    return response.data\r\n}\r\n\r\nexport default { getAll, create }","import userService from '../services/userService'\r\n\r\nconst userReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'INIT_USERS':\r\n            return action.data\r\n        case 'NEW_USER':\r\n            return state.concat(action.data)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userInit = (data) => {\r\n    return async (dispatch) => {\r\n        const users = await userService.getAll()\r\n\r\n        dispatch({\r\n            type: 'INIT_USERS',\r\n            data: users\r\n        })\r\n    }\r\n}\r\n\r\nexport const userCreation = (content) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const newUser = await userService.create(content)\r\n\r\n            dispatch({\r\n                type: 'NEW_USER',\r\n                data: newUser\r\n            })\r\n\r\n            return newUser\r\n        } catch (exception) {\r\n            console.log(exception) // Detailed error message on console?\r\n        }\r\n    }\r\n}\r\n\r\nexport default userReducer","import axios from 'axios'\r\nimport { getConfig } from '../util/serviceHelper'\r\n\r\nconst baseUrl = '/api/messages'\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n\r\n    return response.data\r\n}\r\n\r\nconst getOne = async (id) => {\r\n    const response = await axios.get(`${baseUrl}/${id}`)\r\n\r\n    return response.data\r\n}\r\n\r\nconst create = async (content) => {\r\n    const response = await axios.post(baseUrl, content, getConfig())\r\n\r\n    return response.data\r\n}\r\n\r\nconst update = async (id, content) => {\r\n    const response = await axios.put(`${baseUrl}/${id}`, content, getConfig())\r\n\r\n    return response.data\r\n}\r\n\r\nexport default { getAll, getOne, create, update }","import messageService from '../services/messageService'\r\n\r\nconst messageReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'INIT_MESSAGES':\r\n            return action.data\r\n        case 'NEW_MESSAGE':\r\n            return state.concat(action.data)\r\n        case 'EDIT_MESSAGE':\r\n            const messages = state.filter(message => message.id !== action.data.id)\r\n            return messages.concat(action.data.updatedMessage)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const messageInit = (data) => {\r\n    return async (dispatch) => {\r\n        const messages = await messageService.getAll()\r\n\r\n        dispatch({\r\n            type: 'INIT_MESSAGES',\r\n            data: messages\r\n        })\r\n    }\r\n}\r\n\r\nexport const messageCreation = (content) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const newMessage = await messageService.create(content)\r\n            \r\n            dispatch({\r\n                type: 'NEW_MESSAGE',\r\n                data: newMessage\r\n            }) \r\n\r\n            return newMessage\r\n        } catch (exception) {\r\n            console.log(exception) // check how detailed the error messages are\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport const messageEdit = (id, content) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const updatedMessage = await messageService.update(id, content)\r\n\r\n            dispatch({\r\n                type: 'EDIT_MESSAGE',\r\n                data:  { \r\n                    updatedMessage,\r\n                    id\r\n                }\r\n            })\r\n\r\n            return updatedMessage\r\n        } catch (exception) {\r\n            console.log(exception)\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default messageReducer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Redirector extends React.Component {\r\n    render () {\r\n        if (this.props.redirect === null || this.props.redirect === undefined) {\r\n            return null\r\n        }\r\n\r\n        return <Redirect to={this.props.redirect} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { redirect: state.redirect }\r\n}\r\n\r\nexport default connect (mapStateToProps) (Redirector)","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import loginService from '../services/loginService'\r\nimport { setConfig } from '../util/serviceHelper'\r\n\r\nconst loginReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return action.user\r\n        case 'LOGOUT':\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const login = (credentials) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await loginService.login(credentials)\r\n\r\n            window.localStorage.setItem('loggedInUser', JSON.stringify(user))\r\n            setConfig(user.token)\r\n            console.log('Successfully logged in!')\r\n\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                user: user\r\n            })\r\n\r\n            return user\r\n        } catch (exception) {\r\n            console.log(exception)\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'LOGOUT'\r\n        })\r\n    }\r\n}\r\n\r\nexport default loginReducer","const redirectReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'REDIRECT':\r\n            return action.data\r\n        case 'NULLIFY_REDIRECT':\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const redirect = (path) => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: 'REDIRECT',\r\n            data: path\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: 'NULLIFY_REDIRECT'\r\n            }, 100)\r\n        })\r\n    }\r\n}\r\n\r\nexport default redirectReducer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport Redirector from './Redirector'\r\nimport { login } from '../reducers/loginReducer'\r\nimport { redirect } from '../reducers/redirectReducer'\r\n\r\nclass LoginForm extends React.Component {\r\n    sendLoginCredentials = async (event) => {\r\n        event.preventDefault()\r\n\r\n        const credentials = {\r\n            username: event.target.username.value,\r\n            password: event.target.password.value\r\n        }\r\n\r\n        event.target.username.value = ''\r\n        event.target.password.value = ''\r\n\r\n        const user = await this.props.login(credentials)\r\n\r\n        if (user !== null) {\r\n            this.props.redirect('/')\r\n        } else {\r\n            alert('Login failed')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Log in</h2>\r\n                <Form onSubmit={this.sendLoginCredentials}>\r\n                    <Form.Field label=\"Username\" name=\"username\" control=\"input\" />\r\n                    <Form.Field label=\"Password\" name=\"password\" control=\"input\" type=\"password\" />\r\n                    <Button type=\"submit\">Login</Button>\r\n                </Form>\r\n                <Redirector />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = { login, redirect }\r\n\r\nexport default connect(null, mapDispatchToProps) (LoginForm)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport Redirector from './Redirector'\r\nimport { messageEdit } from '../reducers/messageReducer'\r\nimport { redirect } from '../reducers/redirectReducer'\r\n\r\nclass MessageEditForm extends React.Component {\r\n    editMessage = async (event) => {\r\n        event.preventDefault()\r\n\r\n        const userInput = {\r\n            title: event.target.title.value,\r\n            content: event.target.content.value\r\n        }\r\n\r\n        const editedMessage = await this.props.messageEdit(this.props.message.id, userInput)\r\n\r\n        if (editedMessage) {\r\n            this.props.redirect('/')\r\n        } else {\r\n            alert('fdsfdfsdf')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { message } = this.props\r\n        \r\n        if (message === null || message === undefined) {\r\n            return null\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h3>Edit this message</h3>\r\n                <Form onSubmit={this.editMessage}>\r\n                    <Form.Field label=\"Title\" name=\"title\" control=\"input\" defaultValue={message.title} />\r\n                    <Form.Field label=\"Message\" name=\"content\" control=\"input\" defaultValue={message.content} />\r\n                    <Button type=\"submit\">Edit</Button>\r\n                </Form>\r\n                <Redirector />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    const { messageId } = props\r\n\r\n    if (state.messages === null) {\r\n        return { message: null }\r\n    }\r\n    \r\n    return { \r\n        message: state.messages.find(message => message.id === messageId)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = { messageEdit, redirect }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (MessageEditForm)\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { messageCreation } from '../reducers/messageReducer'\r\n\r\nclass MessageCreationForm extends React.Component {\r\n    createMessage = async (event) => {\r\n        event.preventDefault()\r\n\r\n        const formContent = {\r\n            title: event.target.title.value,\r\n            content: event.target.content.value\r\n        }\r\n\r\n        event.target.title.value = \"\"\r\n        event.target.content.value = \"\"\r\n \r\n        await this.props.messageCreation(formContent)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Post a message</h3>\r\n                <Form onSubmit={this.createMessage}>\r\n                    <Form.Field label=\"Title\" name=\"title\" control=\"input\" />\r\n                    <Form.Field label=\"Message\" name=\"content\" control=\"input\" />\r\n                    <Button type=\"submit\">Post</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = { messageCreation }\r\n\r\nexport default connect(null, mapDispatchToProps) (MessageCreationForm)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Table } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport MessageCreationForm from './MessageCreationForm'\r\n\r\nclass MessagesView extends React.Component {\r\n    form = () => {\r\n        if (this.props.loggedInUser === null || this.props.loggedInUser === undefined) {\r\n            return null\r\n        } else {\r\n            return <MessageCreationForm />\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Messages</h2>\r\n                <Table>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Title</Table.HeaderCell>\r\n                            <Table.HeaderCell>Poster</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {this.props.messages.map(message => <Table.Row key={message.id}>\r\n                            <Table.Cell><Link to={`/messages/${message.id}`}>{message.title}</Link></Table.Cell>\r\n                            <Table.Cell>{message.user.username}</Table.Cell>\r\n                        </Table.Row>)}\r\n                    </Table.Body>\r\n                </Table>\r\n                {this.form()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { messages: state.messages, loggedInUser: state.loggedInUser }\r\n}\r\n\r\nexport default connect(mapStateToProps) (MessagesView)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass MessageView extends React.Component {\r\n    render () {\r\n        const { message } = this.props\r\n\r\n        if (message === null || message === undefined) {\r\n            return null\r\n        }\r\n\r\n        const editLink = this.props.loggedInUser !== null && this.props.loggedInUser.id === message.user._id ?\r\n        <Link to={`/messages/${message.id}/edit`}>Edit</Link>:\r\n        null\r\n\r\n        return (\r\n            <div key={message.id}>\r\n                <h2>{message.title}</h2>\r\n                <p>From: {message.user.username}</p>\r\n                <div dangerouslySetInnerHTML={{\"__html\": message.content}} />\r\n                <p>{editLink}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    const { messageId } = props\r\n\r\n    if (state.messages === null) {\r\n        return { message: null }\r\n    }\r\n\r\n    return {\r\n        message: state.messages.find(message => message.id === messageId),\r\n        loggedInUser: state.loggedInUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps) (MessageView)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { logout } from '../reducers/loginReducer'\r\n\r\nclass NavigationBar extends React.Component {\r\n    userLoggedIn = () => {\r\n        return this.props.loggedInUser !== null && this.props.loggedInUser !== undefined\r\n    }\r\n\r\n    loginMenuItem = () => {\r\n        return !this.userLoggedIn() ?\r\n            <Menu.Item link>\r\n                <Link to=\"/login\">Login</Link>\r\n            </Menu.Item>:\r\n            null\r\n    }\r\n    \r\n    registerMenuItem = () => {\r\n        return !this.userLoggedIn() ?\r\n            <Menu.Item>\r\n                <Link to=\"/register\">Register</Link>\r\n            </Menu.Item>:\r\n            null\r\n    }\r\n\r\n    logoutMenuItem = () => {\r\n        return this.userLoggedIn() ?\r\n            <Menu.Item onClick={this.props.logout}>Logout</Menu.Item>:\r\n            null\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Menu inverted>\r\n                <Menu.Item link>\r\n                    <Link to=\"/\">Messages</Link>\r\n                    {this.loginMenuItem()}\r\n                    {this.registerMenuItem()}\r\n                    {this.logoutMenuItem()}\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return { loggedInUser: state.loggedInUser }\r\n}\r\n\r\nconst mapDispatchToProps = { logout }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (NavigationBar)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport  Redirector from './Redirector'\r\nimport { userCreation } from '../reducers/userReducer'\r\nimport { redirect } from '../reducers/redirectReducer'\r\n\r\nclass RegistrationForm extends React.Component {\r\n    createUser = async (event) => {\r\n        event.preventDefault()\r\n\r\n        const user = await this.props.userCreation({ \r\n            username: event.target.username.value, \r\n            password: event.target.password.value\r\n        })\r\n       \r\n        if (user) {\r\n            alert('New user created successfully, you may now login with your credentials')\r\n            this.props.redirect('/login')\r\n        } else {\r\n            alert('Account registration failed, probably because you attempted to create a duplicate user')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Register a new account</h3>\r\n                <Form onSubmit={this.createUser}>\r\n                    <Form.Field label=\"Username\" name=\"username\" control=\"input\" />\r\n                    <Form.Field label=\"Password\" name=\"password\" control=\"input\" type=\"password\" />\r\n                    <Button type=\"submit\">Register</Button>\r\n                </Form>\r\n                <Redirector />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = { userCreation, redirect } \r\n\r\nexport default connect(null, mapDispatchToProps) (RegistrationForm)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Container } from 'semantic-ui-react'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n\r\nimport { userInit } from './reducers/userReducer'\r\nimport { messageInit } from './reducers/messageReducer'\r\n\r\nimport LoginForm from './components/LoginForm'\r\nimport MessageEditForm from './components/MessageEditForm'\r\nimport MessagesView from './components/MessagesView'\r\nimport MessageView from './components/MessageView'\r\nimport NavigationBar from './components/NavigationBar'\r\nimport RegistrationForm from './components/RegistrationForm'\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.userInit()\r\n        this.props.messageInit()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Router>\r\n                    <div>\r\n                        <h1>\r\n                            <Link to=\"/\">Messageboard</Link>\r\n                        </h1>\r\n                        <NavigationBar />\r\n                        <Route exact path=\"/\" render={() => <MessagesView />} />\r\n                        <Route path=\"/login\" render={() => <LoginForm />} />\r\n                        <Route exact path=\"/messages\" render={() => <MessagesView />} />\r\n                        <Route exact path=\"/messages/:id\" render={({ match }) => <MessageView messageId={match.params.id} />} />\r\n                        <Route exact path=\"/messages/:id/edit\" render={({ match }) => <MessageEditForm messageId={match.params.id} />} />\r\n                        <Route path=\"/register\" render={() => <RegistrationForm />} />        \r\n                    </div>\r\n                </Router>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = { userInit, messageInit }\r\n\r\nexport default connect(null, mapDispatchToProps) (App)\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport userReducer from './reducers/userReducer'\r\nimport messageReducer from './reducers/messageReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport redirectReducer from './reducers/redirectReducer'\r\n\r\nconst reducer = combineReducers({\r\n    users: userReducer,\r\n    messages: messageReducer,\r\n    loggedInUser: loginReducer,\r\n    redirect: redirectReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}